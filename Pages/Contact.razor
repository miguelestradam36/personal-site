@page "/contact"
@using miguelestradam.Data
@inject WeatherForecastService ForecastService

<PageTitle>@title</PageTitle>

<HeadContent>
    <link href="vendor/aos/aos.css" rel="stylesheet">
    <link href="vendor/glightbox/css/glightbox.min.css" rel="stylesheet">
    <link href="vendor/swiper/swiper-bundle.min.css" rel="stylesheet">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="@description">
    <meta property="og:title" content="@title">
    <meta property="og:type" content="website">
    <meta property="og:url" content="@url">
    <link rel="canonical" href="@url" />
    <meta itemprop="name" content="@title">
    <meta itemprop="description" content="@description">
    <meta name="twitter:card" content="@description">
    <meta name="twitter:url" content="@url">
    <meta name="twitter:title" content="@title">
    <meta name="twitter:description" content="@description">
</HeadContent>

<section id="title" class="col-12 p-2 m-1">
    <div class="row">
        <h1 class="text-info"><iconify-icon icon="bi:chat-square-dots"></iconify-icon>&nbsp; Contact</h1>
    </div>
    <div class="row">
        <h2 class="text-muted">@title</h2>
    </div>
</section>
<section id="content" class="col-12 p-2 m-1">
    <div class="row">
        <p>This component demonstrates fetching data from a service.</p>
    </div>
</section>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private WeatherForecast[]? forecasts;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await ForecastService.GetForecastAsync(DateTime.Now);
    }
    public string description = "Get in contact with me";
    public string title = "Contact | Miguel Estrada Personal Site";
    public string url = "https://miguel-estrada.azurewebsites.net/contact";
}
